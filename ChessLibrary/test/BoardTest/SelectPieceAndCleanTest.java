/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BoardTest;

import pieces.Board;
import java.util.Arrays;
import java.util.Collection;
import static org.junit.Assert.assertTrue;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

/**
 *
 * @author MauroSÃ©rgio
 */
@RunWith(Parameterized.class)
public class SelectPieceAndCleanTest {
    
    private final Board input;
    private final char[][] originalBoard;
    private final char[][] expect;        
            
    public SelectPieceAndCleanTest(char[][] input, char[][] expect){
        this.input = new Board(input);
        this.originalBoard = input;
        this.expect = expect;
    }
    
    static private char[][] inputTest1(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','K','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','S','S','S','O','O','O','/'},
                {'/','O','O','S','K','S','O','O','O','/'},
                {'/','O','O','S','S','S','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest2(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','k','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','S','S','S','O','O','O','/'},
                {'/','O','O','S','k','S','O','O','O','/'},
                {'/','O','O','S','S','S','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest3(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','Q','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','S','O','O','S','O','O','S','O','/'},
                {'/','O','S','O','S','O','S','O','O','/'},
                {'/','O','O','S','S','S','O','O','O','/'},
                {'/','S','S','S','Q','S','S','S','S','/'},
                {'/','O','O','S','S','S','O','O','O','/'},
                {'/','O','S','O','S','O','S','O','O','/'},
                {'/','S','O','O','S','O','O','S','O','/'},
                {'/','O','O','O','S','O','O','O','S','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest4(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','q','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','S','O','O','S','O','O','S','O','/'},
                {'/','O','S','O','S','O','S','O','O','/'},
                {'/','O','O','S','S','S','O','O','O','/'},
                {'/','S','S','S','q','S','S','S','S','/'},
                {'/','O','O','S','S','S','O','O','O','/'},
                {'/','O','S','O','S','O','S','O','O','/'},
                {'/','S','O','O','S','O','O','S','O','/'},
                {'/','O','O','O','S','O','O','O','S','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest5(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','N','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','S','O','S','O','O','O','/'},
                {'/','O','S','O','O','O','S','O','O','/'},
                {'/','O','O','O','N','O','O','O','O','/'},
                {'/','O','S','O','O','O','S','O','O','/'},
                {'/','O','O','S','O','S','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest6(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','n','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','S','O','S','O','O','O','/'},
                {'/','O','S','O','O','O','S','O','O','/'},
                {'/','O','O','O','n','O','O','O','O','/'},
                {'/','O','S','O','O','O','S','O','O','/'},
                {'/','O','O','S','O','S','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest7(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','B','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','S','O','O','O','O','O','S','O','/'},
                {'/','O','S','O','O','O','S','O','O','/'},
                {'/','O','O','S','O','S','O','O','O','/'},
                {'/','O','O','O','B','O','O','O','O','/'},
                {'/','O','O','S','O','S','O','O','O','/'},
                {'/','O','S','O','O','O','S','O','O','/'},
                {'/','S','O','O','O','O','O','S','O','/'},
                {'/','O','O','O','O','O','O','O','S','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest8(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','b','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','S','O','O','O','O','O','S','O','/'},
                {'/','O','S','O','O','O','S','O','O','/'},
                {'/','O','O','S','O','S','O','O','O','/'},
                {'/','O','O','O','b','O','O','O','O','/'},
                {'/','O','O','S','O','S','O','O','O','/'},
                {'/','O','S','O','O','O','S','O','O','/'},
                {'/','S','O','O','O','O','O','S','O','/'},
                {'/','O','O','O','O','O','O','O','S','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest9(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','R','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','S','S','S','R','S','S','S','S','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest10(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','r','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','S','S','S','r','S','S','S','S','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest11(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','P','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','P','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest12(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','p','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','S','O','O','O','O','/'},
                {'/','O','O','O','p','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest13(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','N','O','O','O','O','O','O','/'},
                {'/','O','O','O','K','k','O','O','O','/'},
                {'/','O','n','O','Q','P','O','O','O','/'},
                {'/','O','O','O','O','p','O','O','O','/'},
                {'/','O','r','O','O','O','O','O','O','/'},
                {'/','O','O','O','R','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','N','O','O','O','O','O','O','/'},
                {'/','O','O','S','K','S','O','O','O','/'},
                {'/','O','S','S','Q','P','O','O','O','/'},
                {'/','O','O','S','S','S','O','O','O','/'},
                {'/','O','S','O','S','O','O','O','O','/'},
                {'/','O','O','O','R','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    static private char[][] inputTest14(int i){
        
        if(i == 1){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','P','P','k','O','O','O','/'},
                {'/','O','O','p','P','K','n','O','O','/'},
                {'/','O','p','p','N','P','Q','O','O','/'},
                {'/','O','O','P','P','p','N','O','O','/'},
                {'/','O','O','p','p','q','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        if(i == 2){
            return new char[][]{
                {'/','/','/','/','/','/','/','/','/','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','P','P','S','O','O','O','/'},
                {'/','O','S','p','P','K','S','O','O','/'},
                {'/','O','p','p','N','P','Q','O','O','/'},
                {'/','O','S','P','P','p','N','O','O','/'},
                {'/','O','O','S','p','S','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','O','O','O','O','O','O','O','O','/'},
                {'/','/','/','/','/','/','/','/','/','/'},
            };
        }
        
        return null;
    }
    
    @Parameterized.Parameters
    public static Collection myInputs(){
        return Arrays.asList(new Object[][]{
                {inputTest1(1),inputTest1(2)},
                {inputTest2(1),inputTest2(2)},
                {inputTest3(1),inputTest3(2)},
                {inputTest4(1),inputTest4(2)},
                {inputTest5(1),inputTest5(2)},
                {inputTest6(1),inputTest6(2)},
                {inputTest7(1),inputTest7(2)},
                {inputTest8(1),inputTest8(2)},
                {inputTest9(1),inputTest9(2)},
                {inputTest10(1),inputTest10(2)},
                {inputTest11(1),inputTest11(2)},
                {inputTest12(1),inputTest12(2)},
                {inputTest13(1),inputTest13(2)},
                {inputTest14(1),inputTest14(2)},
            }
        );
    }
    
    @Test
    public void selectPieceTest1(){
        
        boolean aux;                
        
        input.selectPiece(4, 4);
                
        aux = BoardAux.compareDescription(expect, input.getDescription());
        assertTrue(aux);
        
        input.clean();
                
        aux = BoardAux.compareDescription(originalBoard, input.getDescription());
        assertTrue(aux);
        
    }
    
}
